# File: layer3_et.def
Bootstrap: localimage
From: layer2_lorene.sif

%help
    Einstein Toolkit Container --- Layer 5 --- Einstein Toolkit
    This layer downloads and compiles the Einstein Toolkit, producing the
    executable /et_exe.
    The generated image can be used as an Einstein Toolkit executable,
    e.g., ./et_bns.sif <options>.

%labels
    Author(s)  Leo Werneck <wernecklr@gmail.com>
    Version    1.0

%setup
    touch ${SINGULARITY_ROOTFS}/input_thornlist.th

%post
    # Move to a known directory
    cd /

    # Download GetComponents using instructions from einsteintoolkit.org
    curl -kLO "https://raw.githubusercontent.com/gridaphobe/CRL/ET_2025_05/GetComponents"
    chmod a+x GetComponents

    # Download the Einstein Toolkit using the shortened bns.th thornlist
    # Note: The path to bns.th is now in the root of the container
    ./GetComponents --noshallow /input_thornlist.th --root /Cactus

    # Now build the Einstein Toolkit.
    cd /Cactus

    # Create option list
    echo '# Einstein Toolkit options list
VERSION    = 2025-08-01

# Compilers
CPP = cpp
FPP = cpp
CC  = gcc
CXX = g++
F77 = gfortran
F90 = gfortran

# Compiler flags
CPPFLAGS = -DMPICH_IGNORE_CXX_SEEK
FPPFLAGS = -traditional
CFLAGS   = -O2 -g -fopenmp -march=native -std=gnu99
CXXFLAGS = -O2 -g -fopenmp -march=native -std=c++17
F77FLAGS = -O2 -g -fopenmp -march=native -fcray-pointer -ffixed-line-length-none -fno-range-check
F90FLAGS = -O2 -g -fopenmp -march=native -fcray-pointer -ffixed-line-length-none -fno-range-check

# Linker flags
LDFLAGS = -rdynamic

# Vectorization options
VECTORISE                            = yes
VECTORISE_ALIGNED_ARRAYS             = no
VECTORISE_ALWAYS_USE_UNALIGNED_LOADS = yes
VECTORISE_INLINE                     = yes

# Debug flags
DEBUG = no

# MPI Installation
MPI_LIBS     = mpi
MPI_LIB_DIRS = /opt/openmpi/lib
MPI_INC_DIRS = /opt/openmpi/include

# Misc?
PTHREADS_DIR      = NO_BUILD
C_LINE_DIRECTIVES = yes
F_LINE_DIRECTIVES = yes
' > et_options.cfg

    yes | make sim-config options=et_options.cfg
    cp thornlists/input_thornlist.th configs/sim/ThornList
    make -j16

    # Copy the executable
    cp exe/cactus_sim /et_exe

    # Clean up
    cd /
    rm -rf Cactus

%runscript
    # This script runs when you execute the container (e.g., ./et_<parfile>.sif)
    echo "Einstein Toolkit container ready. Running the Einstein Toolkit."
    /et_exe "$@"
